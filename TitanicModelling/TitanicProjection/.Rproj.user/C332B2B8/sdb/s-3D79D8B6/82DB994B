{
    "collab_server" : "",
    "contents" : "\nTitanic_Raw$Age[is.na(Titanic_Raw$Age)] <- mean(Titanic_Raw$Age,na.rm=T)\ntraining_data2 <- Titanic_Raw[sample(nrow(Titanic_Raw), 800), ]\ntraining_data_ids <- training_data2$PassengerId\norig_data_ids <- Titanic_Raw$PassengerId\n\ntesting_data_ids <- vector(\"list\", 91)\ni <- 1\nfor (id in orig_data_ids) { \n  if (!(id %in% training_data_ids)) { \n      testing_data_ids[[i]] <- id\n      i <- i + 1\n  }\n}\n\ntesting_data4 <- subset(Titanic_Raw, PassengerId %in% testing_data_ids)\n\nis.na(training_data3) <- training_data3==''\nis.na(testing_data4) <- testing_data4==''\ntraining_data3 <- subset(training_data2,select=c(2,3,5,6,7,8,10,12))\nlibrary(Amelia)\nmissmap(training_data3, main = \"Missing values vs observed\")\nmodel <- glm(Survived ~.,family=binomial(link='logit'),data=training_data3)\nsummary_model <- summary(model)\n\ntesting_data5 <- subset(testing_data4,select=c(2,3,4,5,6,7,8,10,12))\nfitted.results <- predict(model,testing_data5,type='response')\nfitted.results <- ifelse(fitted.results > 0.5, 1, 0)\nmisClasificError <- mean(fitted.results != testing_data4$Survived)\nprint(paste('Accuracy',1-misClasificError))\n\n\n\n\n",
    "created" : 1500624773499.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "981380789",
    "id" : "82DB994B",
    "lastKnownWriteTime" : 1500705015,
    "last_content_update" : 1500705015108,
    "path" : "~/Desktop/TitanicModelling/TitanicProjection/TestDoc.R",
    "project_path" : "TestDoc.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}